내가 푼거

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class HelloWorld {

    public static void main(String[] args) throws IOException {
        
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        String problem = br.readLine();

        StringBuilder original = new StringBuilder();
        StringBuilder reverse = new StringBuilder();
        for(int i = 0; i < problem.length(); ++i) {
            char c = problem.charAt(i);
            if(!Character.isAlphabetic(c))
                continue;

            original.append(c);
            reverse.insert(0, c); // 맨앞에 글자를 삽입하면서 다른 글자들을 한칸씩 뒤로 미루며 o(n) 시간복잡도 발생.
            // for문 안에서 o(n)이 발생하므로 o(n^2)가 됨.
        }

        System.out.println(original.toString().equalsIgnoreCase(reverse.toString()) ? "YES" : "NO");

        br.close();
    }
}

시간 복잡도 개선판.


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class HelloWorld {

    public static void main(String[] args) throws IOException {
        
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        String problem = br.readLine();

        int length = problem.length();
        StringBuilder original = new StringBuilder();
        char[] reverse = new char[length];
        int index = 0;

        for (int i = 0; i < length; ++i) {
            char c = problem.charAt(i);
            if (!Character.isAlphabetic(c))
                continue;
            
            original.append(c);
            reverse[length - 1 - index++] = c;
        }


        System.out.println(original.toString().equalsIgnoreCase(new String(reverse, length - index, index)) ? "YES" : "NO");

        br.close();
    }
}


(replaceAll 정규식 이용)

// 대문자 A-Z 가 아닌 글자는 모두 "" 로 바꾼다
string s = problem.toUpperCase().replaceAll("[^A-Z]", "");
s.equals(new StringBuilder(s).reverse().toString())
